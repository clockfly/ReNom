# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, grid
# This file is distributed under the same license as the ReNom package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: ReNom 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-02-01 09:24+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../rsts/api/v2/autosum/renom.core.Grads.rst:2
msgid "renom.core.Grads"
msgstr ""

#: of renom.core.Grads:1
msgid "This class contains gradients of each Node object."
msgstr ""

#: of renom.core.Grads:3
msgid ""
"When the function ``grad`` which is a method of Node class is called, an "
"instance of Grads class will be returned."
msgstr ""

#: of renom.core.Grads:6
msgid ""
"For getting the gradient with respect to any Variable object 'x' which is"
" on a computational graph, call the 'get' function of Grads object."
msgstr ""

#: of renom.core.Grads renom.core.Grads.add renom.core.Grads.clip_gradient
#: renom.core.Grads.get renom.core.Grads.set renom.core.Grads.update
msgid "Parameters"
msgstr ""

#: of renom.core.Grads:9
msgid "Root node of the computational graph."
msgstr ""

#: of renom.core.Grads:11
msgid "Weight decay coefficient."
msgstr ""

#: of renom.core.Grads:15 renom.core.Grads.update:14
msgid "Example"
msgstr ""

#: ../../rsts/api/v2/autosum/renom.core.Grads.rst:12
msgid "Method Summary"
msgstr ""

#: ../../rsts/api/v2/autosum/renom.core.Grads.rst:27:<autosummary>:1
msgid ":obj:`add <renom.core.Grads.add>`\\ \\(node\\, dy\\[\\, caller\\]\\)"
msgstr ""

#: ../../rsts/api/v2/autosum/renom.core.Grads.rst:27:<autosummary>:1 of
#: renom.core.Grads.add:1
msgid ""
"This method stores given gradient ``dy`` to the dictionary with a key "
"which is the id of given node object."
msgstr ""

#: ../../rsts/api/v2/autosum/renom.core.Grads.rst:27:<autosummary>:1
msgid ""
":obj:`clip_gradient <renom.core.Grads.clip_gradient>`\\ "
"\\(\\[threshold\\, norm\\]\\)"
msgstr ""

#: ../../rsts/api/v2/autosum/renom.core.Grads.rst:27:<autosummary>:1 of
#: renom.core.Grads.clip_gradient:1
msgid "This function clips the gradient if gradient is above threshold."
msgstr ""

#: ../../rsts/api/v2/autosum/renom.core.Grads.rst:27:<autosummary>:1
msgid ":obj:`get <renom.core.Grads.get>`\\ \\(node\\[\\, default\\]\\)"
msgstr ""

#: ../../rsts/api/v2/autosum/renom.core.Grads.rst:27:<autosummary>:1
msgid "This function returns the gradient with respect to the given node."
msgstr ""

#: ../../rsts/api/v2/autosum/renom.core.Grads.rst:27:<autosummary>:1
msgid ":obj:`set <renom.core.Grads.set>`\\ \\(node\\, diff\\)"
msgstr ""

#: ../../rsts/api/v2/autosum/renom.core.Grads.rst:27:<autosummary>:1 of
#: renom.core.Grads.set:1
msgid ""
"This function will set a gradient to the dictionary using id of given "
"node object as a key."
msgstr ""

#: ../../rsts/api/v2/autosum/renom.core.Grads.rst:27:<autosummary>:1
msgid ":obj:`update <renom.core.Grads.update>`\\ \\(\\[opt\\, models\\]\\)"
msgstr ""

#: ../../rsts/api/v2/autosum/renom.core.Grads.rst:27:<autosummary>:1 of
#: renom.core.Grads.update:1
msgid ""
"This function updates variable objects on the computational graph using "
"obtained gradients."
msgstr ""

#: of renom.core.Grads.add:4 renom.core.Grads.set:4
msgid "Node object whose gradient should be given as dy."
msgstr ""

#: of renom.core.Grads.add:6 renom.core.Grads.set:6
msgid "Gradient related to the argument node."
msgstr ""

#: of renom.core.Grads.add:8
msgid "**deprecated**"
msgstr ""

#: of renom.core.Grads.clip_gradient:3
msgid "gradient object"
msgstr ""

#: of renom.core.Grads.clip_gradient:4
msgid "theshold"
msgstr ""

#: of renom.core.Grads.clip_gradient:6
msgid "norm of gradient"
msgstr ""

#: of renom.core.Grads.clip_gradient:10
msgid "Examples"
msgstr ""

#: of renom.core.Grads.get:1
msgid ""
"This function returns the gradient with respect to the given node. In the"
" case of that there is no gradient of given node, this function returns "
"given object as ``default``. If nothing is set to default and no gradient"
" is found, this function raises an error."
msgstr ""

#: of renom.core.Grads.get:6
msgid "Returns a gradient with respect to this argument."
msgstr ""

#: of renom.core.Grads.get:8
msgid ""
"If gradient of given node is not found, object given to this argument "
"will be returned."
msgstr ""

#: of renom.core.Grads.get
msgid "Returns"
msgstr ""

#: of renom.core.Grads.get:12
msgid "Gradient of given node object or object given to argument default."
msgstr ""

#: of renom.core.Grads.get
msgid "Return type"
msgstr ""

#: of renom.core.Grads.update:4
msgid ""
"If an optimizer instance is given, gradients are rescaled with regard to "
"the optimization algorithm before updating."
msgstr ""

#: of renom.core.Grads.update:7
msgid "Algorithm for rescaling gradients."
msgstr ""

#: of renom.core.Grads.update:9
msgid ""
"List of models to update variables. When specified, variables which does "
"not belong to one of the models are not updated."
msgstr ""

